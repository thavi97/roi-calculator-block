{"version":3,"file":"roi-calculator/view.js","mappings":"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","sources":["webpack://roi-calculator/./src/roi-calculator/evaluateFormula.js","webpack://roi-calculator/webpack/bootstrap","webpack://roi-calculator/webpack/runtime/define property getters","webpack://roi-calculator/webpack/runtime/hasOwnProperty shorthand","webpack://roi-calculator/webpack/runtime/make namespace object","webpack://roi-calculator/./src/roi-calculator/view.js"],"sourcesContent":["// Evaluate a formula string with given values\r\n\r\n// Eg\r\n// Evaluating formula: profitPerUnit * unitsPerYear\r\n// With values: Object { percIncrease: 0.1, hours: 24, days: 7, weeksPerYear: 50, unitsPerHour: 22500, profitPerUnit: 2, hoursInAWeek: 168, extraHours: 16.8, extraUnitsPerWeek: 378000, unitsPerYear: 18900000 }\r\n// The result will be 37800000\r\n\r\nexport function evaluateFormula(formula, values) {\r\n    const keys = Object.keys(values);\r\n    const vals = Object.values(values);\r\n\r\n    // Create a dynamic function to evaluate the formula\r\n    // Eg:\r\n    // function anonymous(percIncrease, hours, days, weeksPerYear, unitsPerHour, profitPerUnit, hoursInAWeek, extraHours, extraUnitsPerWeek, unitsPerYear) {\r\n    //      return profitPerUnit * unitsPerYear;\r\n    // }\r\n    const evaluateFormula = new Function(...keys, `return ${formula}`);\r\n    const result = evaluateFormula(...vals);\r\n    return isNaN(result) ? 'Error' : result;\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { evaluateFormula } from './evaluateFormula';\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\t// Iterate over each ROI Calculator block on the page\r\n\tdocument.querySelectorAll('.roi-calculator').forEach((calc) => {\r\n\t\tconst inputs = calc.querySelectorAll('input');  // Get all input fields\r\n\t\tconst resultElems = calc.querySelectorAll('.roi-result');  // Get all result display elements\r\n\t\tconst formulas = JSON.parse(calc.dataset.calculations || '[]');  // Get formulas from the block's data attribute\r\n\r\n\t\t/* Function to perform calculation in real time\r\n\t\t* This function will be called whenever an input changes\r\n\t\t*/\r\n\t\tconst calculate = () => {\r\n\t\t\tconst values = {};\r\n\r\n\t\t\t// Collect all input values\r\n\t\t\tinputs.forEach(input => {\r\n\t\t\t\tconst key = input.dataset.key;\r\n\t\t\t\tlet value;\r\n\r\n\t\t\t\t// For range inputs, we get the value and update the adjacent span\r\n\t\t\t\tif (input.type === 'range') {\t\t\r\n\t\t\t\t\tvalue = parseFloat(input.value) || 0;\r\n\t\t\t\t\tconst isPercentage = input.dataset.percentage === 'yes';\r\n\r\n\t\t\t\t\t// Update the displayed value before modifying the value\r\n\t\t\t\t\tconst rangeValueDisplay = input.nextElementSibling;\r\n\t\t\t\t\tif (rangeValueDisplay) {\r\n\t\t\t\t\t\trangeValueDisplay.textContent = input.value + (isPercentage ? '%' : '');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Internally use decimal if it's a percentage\r\n\t\t\t\t\tif (isPercentage) {\r\n\t\t\t\t\t\tvalue = value / 100;\r\n\t\t\t\t\t}\r\n\t\t\t\t} \r\n\t\t\t\t// For money inputs, the value is formatted to 2 decimal places\r\n\t\t\t\telse if (input.dataset.type === 'money') {\r\n\t\t\t\t\tvalue = parseFloat(input.value) || 0;\r\n\t\t\t\t\tvalue = parseFloat(value.toFixed(2));\r\n\t\t\t\t\tinput.value = value.toFixed(2); \r\n\t\t\t\t}\r\n\t\t\t\t// For other input types (number, text), use the input's value\r\n\t\t\t\telse {\r\n\t\t\t\t\tvalue = parseFloat(input.value) || 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvalues[key] = value;\r\n\t\t\t});\r\n\r\n\t\t\t// Evaluate calculated fields in dependency order\r\n\t\t\t// Clone formulas to avoid modifying the original array\r\n\t\t\tconst remaining = [...formulas];\r\n\t\t\tconst valuesCopy = { ...values }; // This includes user input + calculated results\r\n\r\n\t\t\tlet safetyCounter = 100; // Prevent infinite loop\r\n\r\n\t\t\t// Some formulas depend on others existing first\r\n\t\t\t// If a formula doesn't work yet, it will be stored in the remaining array.\r\n\t\t\t// This loop will keep trying to evaluate until all formulas are resolved or we hit the safety counter\r\n\t\t\twhile (remaining.length && safetyCounter--) {\r\n\t\t\t\tfor (let i = 0; i < remaining.length; i++) {\r\n\t\t\t\t\tconst field = remaining[i];\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t// Try evaluating with current known values\r\n\t\t\t\t\t\tconst result = evaluateFormula(field.formula, valuesCopy);\r\n\t\t\t\t\t\tif (result !== 'Error') {\r\n\t\t\t\t\t\t\tvaluesCopy[field.key] = result;\r\n\r\n\t\t\t\t\t\t\tconst el = calc.querySelector(`.roi-result[data-key=\"${field.key}\"] span`);\r\n\t\t\t\t\t\t\tif (el) {\r\n\t\t\t\t\t\t\t\tconst fieldDefinition = formulas.find(function (f) {\r\n\t\t\t\t\t\t\t\t\treturn f.key === field.key;\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t// This check is to determine if the field is a currency or not\r\n\t\t\t\t\t\t\t\t// If the field is a currency, show it as a currency\r\n\t\t\t\t\t\t\t\tlet shouldShowCurrency = false;\r\n\t\t\t\t\t\t\t\tif (fieldDefinition.isCurrency === 'yes') {\r\n\t\t\t\t\t\t\t\t\tshouldShowCurrency = true;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// First check if the result is a number\r\n\t\t\t\t\t\t\t\t// If it's not a number, display an error message.\r\n\t\t\t\t\t\t\t\t// If it is a number, format it.\r\n\t\t\t\t\t\t\t\tlet formattedValue;\r\n\t\t\t\t\t\t\t\tif (isNaN(result)) {\r\n\t\t\t\t\t\t\t\t\tformattedValue = 'Error';\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tlet numberString = Number(result).toLocaleString(undefined, {\r\n\t\t\t\t\t\t\t\t\t\tmaximumFractionDigits: 2,\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\tif (shouldShowCurrency) {\r\n\t\t\t\t\t\t\t\t\t\tformattedValue = '£' + Number(result).toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tformattedValue = numberString;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tel.textContent = formattedValue;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tremaining.splice(i, 1);\r\n\t\t\t\t\t\t\ti--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t// If error, skip and try again later\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t};\r\n\r\n\t\tinputs.forEach(input => input.addEventListener('input', calculate));\r\n\t\tcalculate();\r\n\t});\r\n});\r\n\r\n"],"names":["evaluateFormula","formula","values","keys","Object","vals","Function","result","isNaN","document","addEventListener","querySelectorAll","forEach","calc","inputs","resultElems","formulas","JSON","parse","dataset","calculations","calculate","input","key","value","type","parseFloat","isPercentage","percentage","rangeValueDisplay","nextElementSibling","textContent","toFixed","remaining","valuesCopy","safetyCounter","length","i","field","el","querySelector","fieldDefinition","find","f","shouldShowCurrency","isCurrency","formattedValue","numberString","Number","toLocaleString","undefined","maximumFractionDigits","minimumFractionDigits","splice","e"],"sourceRoot":""}